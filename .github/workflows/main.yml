name: Python CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      # 1. Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. Instalar Poetry
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: '1.5.1'

      # 4. Instalar dependencias
      - name: Install dependencies
        working-directory: Backend
        run: poetry install

      # 5. Configurar variables de entorno
      - name: Set up environment variables
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          OTHER_VAR: ${{ secrets.OTHER_VAR }}
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "OTHER_VAR=${{ secrets.OTHER_VAR }}" >> $GITHUB_ENV
        working-directory: Backend

      # 6. Ejecutar pre-commit para análisis de código
      - name: Run pre-commit
        working-directory: Backend
        run: poetry run pre-commit run --all-files

      # 7. Ejecutar pruebas con pytest y generar reporte de cobertura
      - name: Run tests
        working-directory: Backend
        env:
          MONGO_URI: "mongodb://localhost:27017/testdb"
        run: |
          poetry run pytest --cov=app --cov-report=xml test/cases_test.py

      # 8. Publicar reporte de cobertura (opcional)
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: Backend/coverage.xml
