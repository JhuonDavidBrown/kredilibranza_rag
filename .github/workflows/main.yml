name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del código
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      # 3. Instalar Poetry y dependencias
      - name: Install Poetry and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          echo "export PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV
          cd Backend
          poetry install

      # 4. Copiar y verificar el archivo .env
      - name: Copy and verify .env file
        run: |
          if [ -f "Backend/.env" ]; then cp Backend/.env .env; fi
          echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV
          echo "Contenido del archivo .env:"
          cat .env

      # 5. Cargar variables de entorno desde el archivo .env
      - name: Load environment variables
        run: |
          set -a
          source .env
          set +a

      # 6. Ejecutar pre-commit para análisis de código
      - name: Run pre-commit
        run: |
          cd Backend
          poetry run pre-commit run --all-files

      # 7. Ejecutar pruebas con pytest
      - name: Run tests
        run: |
          cd Backend
          poetry run pytest --cov=app --cov-report=xml test/cases_test.py
